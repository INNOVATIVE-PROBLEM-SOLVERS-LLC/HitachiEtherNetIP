using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;

namespace HitachiProtocol {
   class FakeResponses {

      #region Data Declarations

      private const string sACK = "\x06"; // 06h Acknowledge
      private const string sNAK = "\x15"; // 15h Negative Acknowledge

      HitachiPrinter parent;

      // Pac-Tec only
      int lastLoadedMessage = -1;

      public int LastLoadedMessage {
         get { return lastLoadedMessage; }
         set { lastLoadedMessage = value; }
      }

      #endregion

      #region Constructors and Destructors

      internal FakeResponses(HitachiPrinter parent) {
         this.parent = parent;
      }

      ~FakeResponses() {

      }

      #endregion

      #region Methods

      internal string BuildFakeCompletion(HPRequest mReq, HitachiPrinter pxr) {

         // Local Storage
         PrinterOps intOp;
         int intSubOp;
         string FakeResult;

         // Get the Op and SubOp at the next extract point
         intOp = mReq.Op;
         intSubOp = mReq.SubOp;

         // See who wants the status
         switch (intOp) {
            case PrinterOps.Retrieve: // 14
               if ((RetrieveOps)intSubOp == RetrieveOps.PrintContentsNoAttributes) {
                  FakeResult = parent.LastMessageText;
               } else {
                  if (pxr.RXClass) {
                     FakeResult = FakeRetrieveRX(mReq);
                  } else {
                     FakeResult = FakeRetrievePXR(mReq);
                  }
               }
               break;
            case PrinterOps.RetrievePattern: // 15
               if (pxr.RXClass) {
                  FakeResult = FakeRetrievePatternRX(mReq);
               } else {
                  FakeResult = FakeRetrievePatternPXR(mReq);
               }
               break;
            case PrinterOps.Fetch:
               FakeResult = sACK;
               switch ((FetchOps)intSubOp) {
                  case FetchOps.Status:
                     FakeResult = AsciiToRawData("02313131323003");
                     break;
                  case FetchOps.Time:
                     if (pxr.RXClass) {
                        FakeResult = AsciiToRawData("021F7F") + DateTime.Now.ToString("yyyyMMddhhmmss" + "\x03");
                     } else {
                        FakeResult = AsciiToRawData("021B7C") + DateTime.Now.ToString("yyyyMMddhhmmss" + "\x03");
                     }
                     break;
                  case FetchOps.PreviousMessage:
                     break;
                  case FetchOps.Currentmessage:
                     break;
                  default:
                     break;
               }
               break;
            default:
               FakeResult = sACK;
               break;
         }
         if (string.IsNullOrEmpty(FakeResult)) {
            FakeResult = AsciiToRawData("0203");
         }
         return FakeResult;
      }

      #endregion

      #region Retrieval Routines

      private string FakeRetrieveRX(HPRequest mReq) {
         //
         // Just <cSOH><cETX> if not in yet
         string strResult = "0203";

         switch ((RetrieveOps)mReq.SubOp) {
            case RetrieveOps.LineSetting:
               strResult = "021F311F31311F473103";
               break;
            case RetrieveOps.PrintContentsAttributes:
               strResult = "0210310000410000420000430000310000320000330000201032C18C8EC18C8E00002FC193FAC193FA00002FC1944EC1944E0000201033C28262C28262C28262C28262103400F14000F14100F14203";
               break;
            case RetrieveOps.PrintContentsNoAttributes:
               strResult = "021031F1BDF1BEF1BF1032363030382D31204747201033414E4320454E50343531103435454420555350233531103533393131342031323334103635363703";
               break;
            case RetrieveOps.CalendarCondition:
               strResult = "0210321F30303030303030303030303030301F30303030301F30303030301F303003";
               break;
            case RetrieveOps.CountCondition:
               strResult = "0210331F00300030003000300020002000200020002000201F00300030003000300020002000200020002000201F00390039003900390020002000200020002000201F3030303030301F3030303030311F30311F311F00390039003900390020002000200020002000201F00300030003000300020002000200020002000201F00300030003000300020002000200020002000201F301F301F3003";
               break;
            case RetrieveOps.PrintFormat:
               strResult
               break;
            case RetrieveOps.PrintSpecifications:
               strResult = "021F3039391F30331F301F303034301F331F311F303034311F303034311F301F30303030301F3030311F303030301F303030301F301F303030301F30301F311F303030301F30303030301F3030301F301F303030301F3003";
               break;
            case RetrieveOps.PrintData:
               strResult = "021F30303031303000530041004D0050004C00450020003100200020002000201F30303032303000530041004D0050004C004500200032002000200020002003";
               break;
            case RetrieveOps.UserEnvironmentSetup:
               strResult = "021F321F301F301F311F311F311F311F311F311F301F311F311F30301F301F311F301F311F301F301F303030301F3030303003";
               break;
            case RetrieveOps.DateTimeSetup:
               strResult = "021F32303134303431363137323835391F311F32303134303431363137323835391F3103";
               break;
            case RetrieveOps.CommunicationsSetup:
               strResult
               break;
            case RetrieveOps.TouchScreenSetup:
               strResult = "021F331F311F311F311F301F301F301F301F3003";
               break;
            case RetrieveOps.OperationManagement:
               strResult = "021F303037321F353030301F3030303037321F3030303030313938361F3031381F3030301F302E3030301F3033311F302E301F30391F3037352E341F301F3033311F30323503";
               break;
            case RetrieveOps.AlarmHistory:
               strResult
               break;
            case RetrieveOps.PartsUsageTime:
               strResult = "021F30303037321F30303037321F30303037321F30303030301F30303037321F30303037321F30303037321F30303037321F30303037321F30303037321F30303037321F30303037321F30303037321F30303037321F30303037321F30303037321F30303037321F30303037321F30303030301F3030303030311F3030303433331F3030303030313938361F32303133313130353136333603";
               break;
            case RetrieveOps.SoftwareVersion:
               strResult = "021F3031303030392E30391F3032303030372E30321F3033303030382E30321F3034303030342E31301F3035303230352E30361F3037303030312E32301F3131303030312E303003";
               break;
            case RetrieveOps.StirrerTest:
               strResult = "0203";
               break;
            case RetrieveOps.MonthSubstituteRule:
               strResult = "0203";
               break;
            case RetrieveOps.ShiftCodeSetup:
               strResult = "021F30303030323335390030003003";
               break;
            case RetrieveOps.TimeCountCondition:
               strResult = "0203";
               break;
            case RetrieveOps.UnitInformation:
               strResult = "021F52582D5344313630571F30383739303331311F3235383303";
               break;
            case RetrieveOps.ViscometerCalibration:
               strResult = "0203";
               break;
            case RetrieveOps.SystemEnvironmentSetup:
               strResult = "0203";
               break;
            case RetrieveOps.AdjustmentOperationalCheckout:
               strResult = "021F303735341F31391F301F311F301F301F3033311F3033311F3003";
               break;
            case RetrieveOps.SolenoidValvePumpTest:
               strResult = "021F311F311F311F311F311F311F311F311F311F311F311F311F311F302E30303003";
               break;
            case RetrieveOps.SubstitutionRule:
               //strResult = "021F30301F000000001F000000001F000000001F000000001F000000001F000000001F000000001F000000001F30301F000000001F000000001F000000001F000000001F000000001F000000001F000000001F0000000003";
               strResult = "021F30301F000000001F000000001F000000001F000000001F000000001F000000001F000000001F0000000003";
               break;
            case RetrieveOps.SubstitutionRuleData:
               //strResult
               strResult
               break;
            case RetrieveOps.AdjustICS:
               strResult = "0210313232323232323232323210323131313131313131313110333131313131313131103431313131313131313131103531313131103631313110373131103831103931103A3103";
               break;
            case RetrieveOps.VariousPrintSetup:
               strResult = "021F311F301F311F311F3103";
               break;
            case RetrieveOps.CirculationSystemSetup:
               strResult = "021F3031381F311F311F301F301F311F303030301F3030303003";
               break;
            case RetrieveOps.FreeLayoutCoordinates:
               strResult
               break;
            case RetrieveOps.MessageGroupNames:
               strResult = "0203";
               break;
            default:
               strResult = "0203";
               break;
         }
         // Convert data
         return AsciiToRawData(strResult);
      }

      private string FakeRetrievePXR(HPRequest mReq) {
         //
         // Just <cSOH><cETX> if not in yet
         string strResult = "0203";

         // See who is calling
         switch ((RetrieveOps)mReq.SubOp) {
            case RetrieveOps.LineSetting: //  0
               strResult = "021B31311B473103";
               break;
            case RetrieveOps.PrintContentsAttributes: //  1
               strResult = "0210310000410000420000430000310000320000330000201032C18C8EC18C8E00002FC193FAC193FA00002FC1944EC1944E0000201033C28262C28262C28262C28262103400F14000F14100F14203";
               break;
            case RetrieveOps.PrintContentsNoAttributes: //  2
               strResult = "021031F1BDF1BEF1BF1032363030382D31204747201033414E4320454E50343531103435454420555350233531103533393131342031323334103635363703";
               break;
            case RetrieveOps.CalendarCondition: //  3
               strResult = "0210321B30303030303030303030303030301B30303030301B30303030301B303003";
               break;
            case RetrieveOps.SubstitutionRule: //  4
               strResult = "0203";
               break;
            case RetrieveOps.CountCondition: //  5
               strResult = "0210331B00300030003000300020002000200020002000201B00300030003000300020002000200020002000201B00390039003900390020002000200020002000201B3030303030301B3030303030311B30311B311B00390039003900390020002000200020002000201B00300030003000300020002000200020002000201B00300030003000300020002000200020002000201B301B301B3003";
               break;
            case RetrieveOps.PrintFormat: //  6
               strResult
               break;
            case RetrieveOps.PrintSpecifications: //  7
               strResult = "021B3039301B3030321B331B301B303030301B303030301B303030301B303030301B3030301B301B303030301B301B3030311B30331B301B301B311B3003";
               break;
            case RetrieveOps.PrintData: //  8
               strResult = "021B30303100530041004D0050004C00450020003100200020002000201B30303200530041004D0050004C004500200032002000200020002003";
               break;
            case RetrieveOps.UserEnvironmentSetup: //  9
               strResult = "021B311B301B311B301B311B311B301B311B311B311B301B3103";
               break;
            case RetrieveOps.DateTimeSetup: // 10
               strResult = "021B32303134303332393036353734331B311B32303134303332393036353734331B3103";
               break;
            case RetrieveOps.CommunicationsSetup: // 11
               strResult = "021B311B391B321B301B311B321B301B321B321B301B301B301B301B311B301B311B301B301B301B301B3030301B301B301B3003";
               break;
            case RetrieveOps.TouchScreenSetup: // 12
               strResult = "021B311B301B3003";
               break;
            case RetrieveOps.OperationManagement: // 13
               strResult = "021B303030301B303630301B3030303030301B3030303030303030301B3030311B3030301B302E3030351B3032341B302E301B31311B3036322E351B301B3032331B30323603";
               break;
            case RetrieveOps.AlarmHistory: // 14
               strResult = "021B3230313430333239303630303130311B3230313430333239303535353130311B3230313430333239303535343130311B3230313430333239303534393130311B3230313430333239303534363130311B3230313430333239303534353130311B3230313430333239303534303130311B32303134303332393035333731303103";
               break;
            case RetrieveOps.PartsUsageTime: // 15
               strResult = "021B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B30303030301B3030303030301B3030303030301B3030303030303030301B32303134303332393035333303";
               break;
            case RetrieveOps.SoftwareVersion: // 16
               strResult = "021B3031303030382E30341B3032303030312E36351B3033303030332E35301B3034303030312E34351B3035303230312E34331B3037303030312E31321B3131303030312E303003";
               break;
            case RetrieveOps.StirrerTest: // 17
               strResult = "021B311B3103";
               break;
            case RetrieveOps.MonthSubstituteRule: // 18
               strResult = "021B004A0041004E004600450042004D00410052004100500052004D00410059004A0055004E004A0055004C004100550047005300450050004F00430054004E004F005600440045004303";
               break;
            case RetrieveOps.ShiftCodeSetup: // 19
               strResult = "0203";
               break;
            case RetrieveOps.TimeCountCondition: // 20
               strResult = "0203";
               break;
            case RetrieveOps.UnitInformation: // 21
               strResult = "021B5058522D50343630571B32313734383231311B3135303203";
               break;
            case RetrieveOps.ViscometerCalibration: // 22
               strResult = "021B30302E30301B30302E30301B30302E30301B30302E30301B30302E30301B30302E30301B3030301B302E3030301B303030301B3030301B30302E30301B30302E30301B30302E30301B30302E30301B30302E30301B30302E30301B3030301B302E3030301B303030301B30303030303030303030303003";
               break;
            case RetrieveOps.SystemEnvironmentSetup: // 23
               strResult = "021B3030311B311B321B311B3036322E351B30311B34301B30301B313903";
               break;
            case RetrieveOps.AdjustmentOperationalCheckout: // 24
               strResult = "021B303734301B34301B301B301B301B301B3032341B3032341B3003";
               break;
            case RetrieveOps.SolenoidValvePumpTest: // 25
               strResult = "021B311B311B311B311B311B311B311B311B311B311B311B311B311B302E30303503";
               break;
            case RetrieveOps.SubstitutionRuleData: // 27
               strResult = "0203";
               break;
            case RetrieveOps.AdjustICS: // 28
               strResult = "0203";
               break;
            case RetrieveOps.VariousPrintSetup: // 29
               strResult = "0203";
               break;
            case RetrieveOps.CirculationSystemSetup: // 30
               strResult = "0203";
               break;
            case RetrieveOps.FreeLayoutCoordinates: // 31
               strResult = "0203";
               break;
            case RetrieveOps.MessageGroupNames: // 32
               strResult = "0203";
               break;
         }

         // Convert data
         return AsciiToRawData(strResult);
      }

      private string FakeRetrievePatternRX(HPRequest mReq) {
         string result;
         if (mReq.CharSize == 8 && mReq.Page == 1) {
            result
         } else {
            result = "0203";
         }
         return AsciiToRawData(result);
      }

      private string FakeRetrievePatternPXR(HPRequest mReq) {
         string result = "0203";
         if (mReq.CharSize == 5 && mReq.Page == 1) {
            result
         }
         return AsciiToRawData(result);
      }

      #endregion

      #region Service Routines

      private string AsciiToRawData(string strIn) {
         string RawData;

         // Allocate space to hold the result
         RawData = string.Empty;

         // step thru all the character pairs
         for (int i = 0; i < strIn.Length / 2; i++) {
            RawData += (char)int.Parse(strIn.Substring(2 * i, 2), NumberStyles.HexNumber);
         }
         return RawData;
      }

      #endregion

   }
}
